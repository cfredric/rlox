var start = clock();
var breakfast = "beignets";
var beverage = "cafe au lait";
breakfast = "beignets with " + beverage;

print breakfast;

{
  var a = "outer";
  {
    var a = a + " inner";
    print a;
  }
}
{
  var a = "retuo";
  {
    var a = a + " renni";
    print a;
  }
}

if (true) {
    print "should print";
}
if (false) {
    print "should not print";
} else {
    print "should print (2)";
}

var breakfast = "beignets (again)";
var beverage = "cafe au lait (again)";
breakfast = "beignets with " + beverage;
print breakfast;

{
  var i = 0;
   while (i < 3) {
      print i;
      i = i + 1;
  }

  print "";
  print "";

  for (var j = 5; j < 10; j = j + 1) {
      print j;
  }
}
print "";
var i = 0;
 while (i < 0 or false) {
    print i;
    i = i + 1;
}

print "";
print "";

for (var j = 5; j < 10; j = j + 1) {
    print j;
}

fun areWeHavingItYet() {
  print "Yes we are!";
}

print areWeHavingItYet;
areWeHavingItYet();

 fun fibonacci(n) {
     if (n == 0 or n == 1) {
         return 1;
     }
     return fibonacci(n-1) + fibonacci(n-2);
 }

 for (var i = 0; i < 10; i = i + 1) {
     print fibonacci(i);
 }

fun sum(a, b, c) {
  return a + b + c;
}

print 4 + sum(5, 6, 7);

var start = clock();
print fibonacci(5);
print clock() - start;

fun outer() {
  var x = "outside";
  fun inner() {
    print x;
    x = "from inside";
  }
  inner();
  print x;
}
outer();

fun foo() {
  var x = 123;
  print x;
}

foo();

fun outer2() {
  var y = "outside";
  var z = "outside2";
  fun inner() {
    print y;
    print z;
    z = "modified";
  }

  return inner;
}

{
  var x = "make a string" + " that can be garbage collected";
  print x;
}

var closure = outer2();
closure();
closure();

class Brioche{}
print Brioche;
print Brioche();

class Toast {}
var toast = Toast();
print toast.jam = "grape";
print toast.jam;

class Scone {
  topping(first, second) {
    print "scone with " + first + " and " + second;
  }
}

var scone = Scone();
scone.topping("berries", "cream");

class CoffeeMaker {
  init(coffee) {
    this.coffee = coffee;
  }

  brew() {
    print "Enjoy your cup of " + this.coffee;

    // No reusing the grounds!
    this.coffee = nil;
  }
}

var maker = CoffeeMaker("coffee and chicory");
maker.brew();

class Oops {
  init() {
    fun f() {
      print "not a method";
    }

    this.field = f;
  }
}

var oops = Oops();
oops.field();

class Doughnut {
  init(fresh) {
      this.isFresh = fresh;
  }
  cook() {
    print "Dunk in the fryer.";
    this.finish("sprinkles");
  }

  finish(ingredient) {
    print "Finish with " + ingredient;
  }
  freshness() {
      print this.isFresh;
  }
}

class Cruller < Doughnut {
    init(fresh) {
        super.init(fresh);
    }
  finish(ingredient) {
    // No sprinkles, always icing.
    super.finish("icing");
  }
}

var cruller = Cruller(true);
print cruller.freshness();
cruller.finish("asdf");

print clock() - start;